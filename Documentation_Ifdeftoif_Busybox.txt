Documentation for testing ifdeftoif on busybox

coreutils/head.c


coreutils/ls.c
	problem: too many variants of ls_opt_flags (ifdeftoif_replacements_parts/ls_opt_flags)
		Could not be solved with ifdeftoif replacement parts framework because the search object is too large
		TypeChef lexer/parser already expands the code such that it is very big. Cannot express the corresponding object in scala properly and compute hash.
	solution: modify the .c file directly (busybox-1.18.5/coreutils/ls_original_modified.c and ifdeftoif_modified_files/busybox-1.18.5/coreutils)
	
	10.11.2014
	problem: after ifdeftoif, make has some warnings and then linker errors:
		coreutils/lib.a(ls.o): In Funktion `my_stat':
		ls.c:(.text.my_stat+0x44): Nicht definierter Verweis auf `_9_is_selinux_enabled'
		ls.c:(.text.my_stat+0x55): Nicht definierter Verweis auf `_9_getfilecon'
		ls.c:(.text.my_stat+0x79): Nicht definierter Verweis auf `_9_is_selinux_enabled'
		ls.c:(.text.my_stat+0x8a): Nicht definierter Verweis auf `_9_lgetfilecon'
		ls.c:(.text.my_stat+0xcf): Nicht definierter Verweis auf `_9_is_selinux_enabled'
		ls.c:(.text.my_stat+0xe0): Nicht definierter Verweis auf `_9_getfilecon'
		ls.c:(.text.my_stat+0x104): Nicht definierter Verweis auf `_9_is_selinux_enabled'
		ls.c:(.text.my_stat+0x115): Nicht definierter Verweis auf `_9_lgetfilecon'
		coreutils/lib.a(ls.o): In Funktion `showfiles':
		ls.c:(.text.showfiles+0x5c8): Nicht definierter Verweis auf `_9_freecon'
		coreutils/lib.a(ls.o): In Funktion `ls_main':
		ls.c:(.text.ls_main+0xae68): Nicht definierter Verweis auf `_251_init_unicode'
		ls.c:(.text.ls_main+0xae88): Nicht definierter Verweis auf `_252_init_unicode'
		ls.c:(.text.ls_main+0xb2af): Nicht definierter Verweis auf `_248_applet_long_options'
		/usr/bin/ld: busybox_unstripped: hidden symbol `_248_applet_long_options' isn't defined
	problem research: Search in "renamings_StructsAndVars.txt" for the corresponding PCs and limit variability such that no duplication of these symbols is necessary
		is_selinux_enabled -> 
			_9_is_selinux_enabled if (def(CONFIG_FEATURE_FIND_CONTEXT)|def(CONFIG_SELINUX))
		getfilecon -> 
			_9_getfilecon if (def(CONFIG_FEATURE_FIND_CONTEXT)|def(CONFIG_SELINUX))
		lgetfilecon -> 
			_9_lgetfilecon if (def(CONFIG_FEATURE_FIND_CONTEXT)|def(CONFIG_SELINUX))
		freecon -> 
			_9_freecon if (def(CONFIG_FEATURE_FIND_CONTEXT)|def(CONFIG_SELINUX))
		init_unicode -> 
			_251_init_unicode if (def(CONFIG_UNICODE_SUPPORT)&def(CONFIG_UNICODE_USING_LOCALE))
			_252_init_unicode if (!def(CONFIG_UNICODE_USING_LOCALE)&def(CONFIG_FEATURE_CHECK_UNICODE_IN_ENV)&def(CONFIG_UNICODE_SUPPORT))
		applet_long_options -> 
			_248_applet_long_options if (def(CONFIG_FEATURE_RUN_PARTS_LONG_OPTIONS)|def(CONFIG_FEATURE_EXPAND_LONG_OPTIONS)|def(CONFIG_FEATURE_START_STOP_DAEMON_LONG_OPTIONS)|def(CONFIG_LONG_OPTS)|def(CONFIG_FEATURE_GETOPT_LONG)|def(CONFIG_FEATURE_GZIP_LONG_OPTIONS)|def(CONFIG_FEATURE_RMDIR_LONG_OPTIONS)|def(CONFIG_FEATURE_TAR_LONG_OPTIONS)|def(CONFIG_FEATURE_ADDGROUP_LONG_OPTIONS)|def(CONFIG_FEATURE_DIFF_LONG_OPTIONS)|def(CONFIG_FEATURE_INSTALL_LONG_OPTIONS)|def(CONFIG_FEATURE_MV_LONG_OPTIONS)|def(CONFIG_FEATURE_ADDUSER_LONG_OPTIONS)|def(CONFIG_FEATURE_MKDIR_LONG_OPTIONS)|def(CONFIG_FEATURE_ENV_LONG_OPTIONS)|def(CONFIG_FEATURE_UNEXPAND_LONG_OPTIONS))
	solution:
		CONFIG_FEATURE_FIND_CONTEXT depends on FIND && SELINUX (busybox-1.18.5/findutils/Config.in)
		CONFIG_FEATURE_SELINUX will not compile unless we have an NSA architecture and most people will set it to N (busybox-1.18.5/Config.in)
		Therefore we force-disable both. (new file busybox/custom_limitations.txt and added it to Hercules call --featureModelFExpr busybox/custom_limitations.txt)
		FIND_CONTEXT and SELINUX errors are gone.
		
		disabled CONFIG_UNICODE_USING_LOCALE in busybox/custom_limitations.txt. The option states that libc unicode support is used. After disabling internal busybox implementation is used.
		We disable the option as we want to focus on the busybox code rather than on libc code

Problem: applet_long_options (12.11.2014)
	ls.c:(.text.ls_main+0x3be7): Nicht definierter Verweis auf `applet_long_options'
	applet_long_options wird definiert in libb/getopt32.c unter Bedingung ENABLE_LONG_OPTS || ENABLE_FEATURE_GETOPT_LONG
	in Config.in gibt es die Nutzer-sichtbare Option LONG_OPTS die wahrscheinlich damit zusammenhängt.
	-> Setze LONG_OPTS in der Konfiguration Alex_configurations/LS_allSubOptions.config auf true, damit die variable verfügbar ist (im Simulator immer noch variabel)

Problem (13.11.2014) on-the-fly replacement vom ls_options array scheint nicht funktioniert zu haben (ifdeftoif_replacements_parts/ls_options).
	Habe die Ersetzung direkt in coreutils/ls_original_modified.c gemacht

13.11.2014: busybox varianten für ls und head funktionieren.
	Ein Problem ist das praktisch alle #ifdef Konfigurationsoptionen nur kontrollieren ob Laufzeit Parameter benutzt werden können oder nicht.
	Beispiel: FEATURE_LS_COLOR und FEATURE_LS_COLOR_IS_DEFAULT bestimmen ob der Parameter --color bei ls genutzt werden kann.
	FEATURE_LS_COLOR mit ifdeftoif zur Laufzeit verfügbar zu machen funktioniert, macht aber nicht mehr viel Sinn weil bei aktiviertem LS_COLOR der Parameter --color die gleiche Funktionalität hätte.
	Am Ende können wir zeigen das ifdeftoif auf großen, realistischen Fallstudien läuft, aber der usecase ist hier nicht präsent.
	Weitere Beispiele:
	LS_USERNAME -> ls -lg vs ls -l
	FEATURE_FANCY_HEAD -> head parameter -c, -q, and -v
	Die Konfigurationsoptionen lassen sich gut aus den c-Dateien und aus Config.in bzw coreutils/Config.in ablesen.
	Konfiguration für diesen Status:
		Hercules:	commit 42cabc21fc6281f8ba07f09ab767a6e21a01ea7f	Author: Florian Garbe <fgarbe@fim.uni-passau.de>	Date:   Wed Nov 12 04:15:59 2014 +0100	extern declarations are no longer renamed if they are optional
		TypeChef:	commit 6428498735fb188a2f35a22256b98cc5bdd61f0e	Merge: b1ed623 56a578f	Author: Florian Garbe <fgarbe@fim.uni-passau.de>	Date:   Fri Oct 24 01:42:07 2014 +0200	Merge remote-tracking branch 'origin/master'
		BB_Analysis:	commit 73f80ef67df67f68c75805fcc8547cb0098c5486	Author: rhein <rhein@fim.uni-passau.de>	Date:   Thu Nov 13 09:53:25 2014 +0100	on-the-fly replacement of ls_options did not work, added it in coreutils/ls_original_modified.c instead
